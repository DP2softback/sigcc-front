# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
  
    defaults:
      run:
         working-directory: ./dp2-frontend/

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './dp2-frontend/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./dp2-frontend/

    steps:
  
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: show smth
      run: ls -la

    - name: Deploy with rsync
      run: rsync -avz ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ubuntu/app-react

    # - name: Copy file to EC2 instance
    #   run: rsync -r -e "ssh -o StrictHostKeyChecking=no" dist ${{ secrets.SSH_HOST }}:/var/www/html
